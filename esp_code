#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <mavlink.h>

const char* ssid = "Your_SSID"; // Replace with your Wi-Fi SSID
const char* password = "Your_PASSWORD"; // Replace with your Wi-Fi Password

WiFiUDP Udp;
unsigned int localPort = 14550; // Local port to listen on
IPAddress remoteIP(192, 168, 4, 1); // IP of the ground control station
unsigned int remotePort = 14550; // Port of the ground control station

void setup() {
    Serial.begin(115200); // Start the Serial communication
    Serial.println("Starting ESP8266...");

    // Connect to Wi-Fi
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Connecting to WiFi...");
    }
    Serial.println("Connected to WiFi");

    // Start UDP
    Udp.begin(localPort);
    Serial.print("Listening on UDP port: ");
    Serial.println(localPort);
}

void loop() {
    // Check for incoming UDP packets
    int packetSize = Udp.parsePacket();
    if (packetSize) {
        // Read the packet into a buffer
        char packetBuffer[255];
        int len = Udp.read(packetBuffer, 255);
        if (len > 0) {
            packetBuffer[len] = 0; // Null-terminate the string
        }

        // Process the incoming MAVLink message
        mavlink_message_t msg;
        mavlink_status_t status;
        for (int i = 0; i < len; i++) {
            if (mavlink_parse_char(MAVLINK_COMM_0, packetBuffer[i], &msg, &status)) {
                // Handle the MAVLink message here
                // For example, you can print the message type
                Serial.print("Received MAVLink message of type: ");
                Serial.println(msg.msgid);
                
                // Forward the message to the APM
                Udp.beginPacket(remoteIP, remotePort);
                Udp.write(packetBuffer, len);
                Udp.endPacket();
            }
        }
    }

    // Send data from APM to ground control station
    if (Serial.available()) {
        while (Serial.available()) {
            char c = Serial.read();
            Udp.beginPacket(remoteIP, remotePort);
            Udp.write(c);
            Udp.endPacket();
        }
    }
}
