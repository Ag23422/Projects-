import cv2
import mediapipe as mp


def count_fingers(lst):
    cnt = 0

    thresh = (lst.landmark[0].y * 100 - lst.landmark[9].y * 100) / 2

    if (lst.landmark[5].y * 100 - lst.landmark[8].y * 100) > thresh:
        cnt += 1
    if (lst.landmark[9].y * 100 - lst.landmark[12].y * 100) > thresh:
        cnt += 1
    if (lst.landmark[13].y * 100 - lst.landmark[16].y * 100) > thresh:
        cnt += 1
    if (lst.landmark[17].y * 100 - lst.landmark[20].y * 100) > thresh:
        cnt += 1
    if (lst.landmark[5].y * 100 - lst.landmark[4].y * 100) > 5:
        cnt += 1
    return cnt


cap = cv2.VideoCapture(0)
drawing = mp.solutions.drawing_utils
hands = mp.solutions.hands
hand_obj = hands.Hands(max_num_hands=1)

while True:
    _, frm = cap.read()

    frm = cv2.flip(frm, 1)
    res = hand_obj.process(cv2.cvtColor(frm, cv2.COLOR_RGB2HLS))

    if res.multi_hand_landmarks:
        drawing.draw_landmarks(frm, res.multi_hand_landmarks[0], hands.HAND_CONNECTIONS)

        hand_KeyPoints = res.multi_hand_landmarks[0]

        cnt = count_fingers(hand_KeyPoints)

    cv2.imshow("Window", frm)

    if cv2.waitKey(1) == 27:
        cv2.destroyAllwindow()
        cap.release()
        break

video_capture = cv2.VideoCapture('/home/ansh/Downloads/WhatsApp Video 2024-01-19 at 21.22.45.mp4')
width = int(video_capture.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(video_capture.get(cv2.CAP_PROP_FRAME_HEIGHT))
video_writer = cv2.VideoWriter('output_file.mp4', cv2.VideoWriter_fourcc(*'mp4v'), 30, (width, height))

while True:
    ret, frame = video_capture.read()

    ret_webcam, webcam_frame = webcaml_capture.read()

    if not ret:
        break

    if not ret_webcam:
        break

    webcam_frame = cv2.resize(webcam_frame, (width, height))

    frame = cv2.hconcat([frame, webcam_frame])

    video_writer.write(frame)

    cv2.imshow('frame', frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

video_capture.release()
video_writer.release()

cv2.destroyAllWindows()
