import cv2
import mediapipe as mp


mp_drawing = mp.solutions.drawing_utils
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(static_image_mode=False, min_detection_confidence=0.5, min_tracking_confidence=0.5)

cap = cv2.VideoCapture(0)

gestures = {
    "fist": "play",
    "palm": "pause",
    "index finger": "load",
    "thumb": "fire"
}


player = cv2.VideoCapture("/home/ansh/PycharmProjects/pythonProject/WhatsApp Video 2024-01-19 at 21.22.45.mp4")

while True:
    ret, frame = cap.read()

    frame = cv2.flip(frame, 1)

    
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    
    results = hands.process(frame_rgb)

    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            mp_drawing.draw_landmarks(
                frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

        
            landmarks = hand_landmarks.landmark

            
            tip_ids = [4, 8, 12, 16, 20]
            x_values = [landmarks[id].x for id in tip_ids]
            y_values = [landmarks[id].y for id in tip_ids]
            thumb_tip_x = landmarks[4].x
            index_tip_x = landmarks[8].x
            middle_tip_x = landmarks[12].x
            ring_tip_x = landmarks[16].x
            pinky_tip_x = landmarks[20].x

           
            if all(x > 0.5 for x in x_values) and all(y < 0.3 for y in y_values):
                gesture = "thumbs_up"
            elif all(x > 0.5 for x in x_values) and all(y > 0.7 for y in y_values):
                gesture = "thumbs_down"
            elif index_tip_x > middle_tip_x and thumb_tip_x < index_tip_x:
                gesture = "left_swipe"
            elif index_tip_x < middle_tip_x and thumb_tip_x > index_tip_x:
                gesture = "right_swipe"
            else:
                gesture = None

            
            if gesture:
                action = gestures.get(gesture)
                if action == "play":
                    player.set(cv2.CAP_PROP_POS_FRAMES, 0)
                    player.set(cv2.CAP_PROP_POS_AVI_RATIO, 0)
                elif action == "pause":
                    player.set(cv2.CAP_PROP_POS_FRAMES, player.get(cv2.CAP_PROP_POS_FRAMES))
                elif action == "rewind":
                    player.set(cv2.CAP_PROP_POS_FRAMES, max(0, player.get(cv2.CAP_PROP_POS_FRAMES) - 100))
                elif action == "fast_forward":
                    player.set(cv2.CAP_PROP_POS_FRAMES, min(player.get(cv2.CAP_PROP_FRAME_COUNT), player.get(cv2.CAP_PROP_POS_FRAMES) + 100))

 
    cv2.imshow('Hand Gesture Control', frame)

   
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break


cap.release()
player.release()
cv2.destroyAllWindows()
