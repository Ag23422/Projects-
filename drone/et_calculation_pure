import math

def calculate_saturated_vapor_pressure(temperature):

    return 0.6108 * math.exp((17.27 * temperature) / (temperature + 237.3))

def calculate_actual_vapor_pressure(relative_humidity, saturated_vapor_pressure):

    return (relative_humidity / 100) * saturated_vapor_pressure

def calculate_et(temperature, humidity, radiation, kc, soil_heat_flux_density, wind_speed, surface_resistance, actual_vapor_pressure, psychrometric_constant):
   
    
  
    svp = calculate_saturated_vapor_pressure(temperature)
    
   
    net_radiation = radiation * 0.0864  # Convert MJ/m²/day to W/m²
   
    et = (0.408 * (net_radiation - soil_heat_flux_density) + 
           (psychrometric_constant * (900 / (temperature + 273)) * wind_speed * 
           (svp - actual_vapor_pressure))) / (psychrometric_constant + 
           (1 + surface_resistance / 1000))
    
    return et


solar_radiation = 5  
soil_heat_flux_density = 0.1  
kc = 0.5 
surface_resistance = 70  
psychrometric_constant = 0.066 

temperature = float(input("Enter the temperature (°C): "))
humidity = float(input("Enter the humidity (%): "))
wind_speed = float(input("Enter the wind speed (m/s): "))


svp = calculate_saturated_vapor_pressure(temperature)
actual_vapor_pressure = calculate_actual_vapor_pressure(humidity, svp)

et = calculate_et(temperature, humidity, solar_radiation, kc, soil_heat_flux_density, wind_speed, surface_resistance, actual_vapor_pressure, psychrometric_constant)
ET=kc*et
print(f"Evapotranspiration (ET) for wheat in tillering stage: {et:.2f} mm/day")
print("real et :",ET)
