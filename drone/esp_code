#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <SoftwareSerial.h>
#include <mavlink.h>

const int RX = D6;
const int TX = D5;

SoftwareSerial SerialComm(RX, TX); 

WiFiUDP Udp;
unsigned int localPort = 14550;
IPAddress remoteIP(192, 168, 4, 1);
unsigned int remotePort = 14550;

String ssid = "";
String password = "";
unsigned long lastReceivedTime = 0;
const unsigned long TIMEOUT = 10000; 

void setup() {
  Serial.begin(115200);
  SerialComm.begin(9600);

  WiFi.disconnect();
  delay(1000);
  Serial.println("ESP Ready");

  Udp.begin(localPort);
}

void loop() {
  if (SerialComm.available()) {
    String line = SerialComm.readStringUntil('\n');
    line.trim();

    if (line.startsWith("WIFI:")) {
      int sep = line.indexOf(':', 5);
      ssid = line.substring(5, sep);
      password = line.substring(sep + 1);
      Serial.print("Connecting to WiFi: "); Serial.println(ssid);
      WiFi.begin(ssid.c_str(), password.c_str());

      unsigned long t_start = millis();
      while (WiFi.status() != WL_CONNECTED && millis() - t_start < 10000) {
        delay(500);
      }

      if (WiFi.status() == WL_CONNECTED) {
        Serial.println("Connected to WiFi.");
      } else {
        Serial.println("WiFi connect failed.");
      }

    } else if (line.indexOf("tamper") != -1) {
      mavlink_message_t msg;
      mavlink_system_t mavlink_system = {1, 1};
      uint8_t buf[MAVLINK_MAX_PACKET_LEN];
      mavlink_msg_command_long_pack(mavlink_system.sysid, mavlink_system.compid, &msg,
                                    1, 0, MAV_CMD_NAV_RETURN_TO_LAUNCH, 0, 0, 0, 0, 0, 0, 0);
      uint16_t len = mavlink_msg_to_send_buffer(buf, &msg);
      Serial.write(buf, len);
      delay(1000); // RTL command sent
    } else {
      Udp.beginPacket(remoteIP, remotePort);
      Udp.write(line.c_str());
      Udp.endPacket();
      lastReceivedTime = millis();
    }
  }

  if (millis() - lastReceivedTime > TIMEOUT) {
    Serial.println("No data received. Triggering failsafe.");
    mavlink_message_t msg;
    mavlink_system_t mavlink_system = {1, 1};
    uint8_t buf[MAVLINK_MAX_PACKET_LEN];
    mavlink_msg_command_long_pack(mavlink_system.sysid, mavlink_system.compid, &msg,
                                  1, 0, MAV_CMD_NAV_RETURN_TO_LAUNCH, 0, 0, 0, 0, 0, 0, 0);
    uint16_t len = mavlink_msg_to_send_buffer(buf, &msg);
    Serial.write(buf, len);
    delay(1000);
    lastReceivedTime = millis();  
  }
}
